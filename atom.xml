<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>鋼彈盪單槓</title>
  
  <subtitle>鋼彈的 coding 筆記</subtitle>
  <link href="http://gundambox.github.io/atom.xml" rel="self"/>
  
  <link href="http://gundambox.github.io/"/>
  <updated>2021-10-04T05:24:10.000Z</updated>
  <id>http://gundambox.github.io/</id>
  
  <author>
    <name>Gundambox</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BoyerMoore majority vote algorithm</title>
    <link href="http://gundambox.github.io/2021/10/04/BoyerMoore-majority-vote-algorithm/"/>
    <id>http://gundambox.github.io/2021/10/04/BoyerMoore-majority-vote-algorithm/</id>
    <published>2021-10-04T05:24:10.000Z</published>
    <updated>2021-10-04T05:24:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>刷題的時候遇到 <code>BoyerMoore majority vote algorithm</code> 相關問題，特別寫一篇記錄</p><a id="more"></a><h2 id="問題描述"><a href="#問題描述" class="headerlink" title="問題描述"></a>問題描述</h2><p><a href="https://leetcode.com/problems/majority-element/">leetcode 題目</a></p><p>給 N 個數字，找出出現次數超過 <code>⌊n / 2⌋</code> 的數字</p><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>因為題目要求超過 <code>⌊n / 2⌋</code></p><p>所以 [1,1,2,2] 這個 case，<code>⌊n / 2⌋</code> 為 2，沒有任何一個數字超過 2，所以沒有答案</p><p>但題目保證一定有 <code>majority element</code>，所以不用擔心這種狀況</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, num = <span class="number">0</span>, count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; numsSize; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            num = nums[i];</span><br><span class="line">            count = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(nums[i] == num) &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            count--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="變形"><a href="#變形" class="headerlink" title="變形"></a>變形</h2><p><a href="https://leetcode.com/problems/majority-element-ii/">leetcode 題目</a></p><p>給 N 個數字，找出出現次數超過 <code>⌊n / 3⌋</code> 的數字</p><p>同理，因為題目要求超過 <code>⌊n / 3⌋</code></p><p>所以 [1,1,2,2,3,3] 這個 case，<code>⌊n / 3⌋</code> 為 2，沒有任何一個數字超過 2，所以沒有答案</p><p>但這次題目沒有保證一定有 <code>majority element</code>，所以最後要檢查 count 有沒有滿足條件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span>* returnSize)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, count1 = <span class="number">0</span>, count2 = <span class="number">0</span>, num1 = <span class="number">0</span>, num2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; numsSize; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i] == num1) &#123;</span><br><span class="line">            count1++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(nums[i] == num2) &#123;</span><br><span class="line">            count2++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(count1 == <span class="number">0</span>) &#123;</span><br><span class="line">            num1 = nums[i];</span><br><span class="line">            count1 = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(count2 == <span class="number">0</span>) &#123;</span><br><span class="line">            num2 = nums[i];</span><br><span class="line">            count2 = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            count1--;</span><br><span class="line">            count2--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    count1 = <span class="number">0</span>, count2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; numsSize; i++) &#123; </span><br><span class="line">        <span class="keyword">if</span>(nums[i] == num1) &#123;</span><br><span class="line">            count1++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(nums[i] == num2) &#123;</span><br><span class="line">            count2++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> *ans = <span class="built_in">calloc</span>(<span class="number">2</span>, <span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    (*returnSize) = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(count1 &gt; numsSize / <span class="number">3</span>) &#123;</span><br><span class="line">        ans[(*returnSize)++] = num1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(count2 &gt; numsSize / <span class="number">3</span>) &#123;</span><br><span class="line">        ans[(*returnSize)++] = num2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><a href="https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_majority_vote_algorithm">Boyer–Moore majority vote algorithm</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;刷題的時候遇到 &lt;code&gt;BoyerMoore majority vote algorithm&lt;/code&gt; 相關問題，特別寫一篇記錄&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>安裝 Ubuntu-20.04 過程遇到的小問題</title>
    <link href="http://gundambox.github.io/2021/07/28/%E5%AE%89%E8%A3%9D-Ubuntu-20-04-%E9%81%8E%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E5%B0%8F%E5%95%8F%E9%A1%8C/"/>
    <id>http://gundambox.github.io/2021/07/28/%E5%AE%89%E8%A3%9D-Ubuntu-20-04-%E9%81%8E%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E5%B0%8F%E5%95%8F%E9%A1%8C/</id>
    <published>2021-07-28T06:54:08.000Z</published>
    <updated>2021-07-28T06:54:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>實作<a href="https://hackmd.io/@sysprog/linux2021-summer">暑期Linux 核心課程</a>的作業遇到太多WSL的問題，找台舊主機裝原生 ubuntu-20.04 壓壓驚，順便把過程中碰到的問題與解法記錄下來</p><a id="more"></a><h2 id="安裝完成重新開機後沒有進登入畫面而是停在-grub"><a href="#安裝完成重新開機後沒有進登入畫面而是停在-grub" class="headerlink" title="安裝完成重新開機後沒有進登入畫面而是停在 grub"></a>安裝完成重新開機後沒有進登入畫面而是停在 grub</h2><ol><li>列出所有裝置</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line"><span class="comment"># (hd0), (hd0,xxx), (hd1), (hd1,xxx), .....</span></span><br></pre></td></tr></table></figure><ol start="2"><li>找出開機磁區</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls (hd0)/</span><br><span class="line">ls (hd0,xxx)/</span><br><span class="line">ls (hd1)/</span><br><span class="line">ls (hd1,xxx)/</span><br><span class="line"><span class="comment"># 直到找出 (hd0,1)/boot/grub 或者 (hd0,1)/grub</span></span><br></pre></td></tr></table></figure><ol start="3"><li>設定參數並開機</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> root=(hd0,xxx)</span><br><span class="line"><span class="built_in">set</span> prefix=(hd0,xxx)/boot/grub</span><br><span class="line">normal</span><br></pre></td></tr></table></figure><h2 id="整合-vscode-Remote-SSH"><a href="#整合-vscode-Remote-SSH" class="headerlink" title="整合 vscode Remote-SSH"></a>整合 vscode Remote-SSH</h2><p>照以往經驗，Ubuntu 可以驅動 Intel 內顯，不用額外設定。這次 Ubuntu 20.04 只抓到 1024x768 的解析度，色彩設定慘到不忍直視，調了半小時還是無法解決。於是想到在遠端用 vscode 開發</p><ol><li>在 Ubuntu 安裝 openssh-server <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install openssh-server</span><br></pre></td></tr></table></figure></li><li>在 Windows10 產生 ssh key <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh<span class="literal">-keygen</span></span><br></pre></td></tr></table></figure></li><li>在 Windows10 的 vscode 安裝 <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh">Remote-SSH 擴充功能</a></li><li>安裝擴充功能後，按下 <code>F1</code> 或 <code>Ctrl+Shift+P</code> 開啟命令選擇區並輸入 remote-ssh<br> <img src="/2021/07/28/%E5%AE%89%E8%A3%9D-Ubuntu-20-04-%E9%81%8E%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E5%B0%8F%E5%95%8F%E9%A1%8C/01.png"></li><li>擴充功能接著會提示輸入要連線的目標，輸入完成後即可連線</li><li>設定 Ubuntu 的 authorized_keys <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/.ssh</span><br><span class="line">touch ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure> 接者把剛剛在 Windows10 產生的 ssh public key 加到 <code>~/.ssh/authorized_keys</code> 檔案中</li></ol><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><a href="https://unix.stackexchange.com/a/330852">GRUB starts in command line after reboot</a></li><li><a href="https://code.visualstudio.com/docs/remote/ssh-tutorial#_remote-ssh">Remote development over SSH</a> </li><li><a href="https://medium.com/@williamkwao/how-to-add-ssh-keys-to-an-ubuntu-server-6a3a5b1bee26">How to add ssh keys to an ubuntu server</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;實作&lt;a href=&quot;https://hackmd.io/@sysprog/linux2021-summer&quot;&gt;暑期Linux 核心課程&lt;/a&gt;的作業遇到太多WSL的問題，找台舊主機裝原生 ubuntu-20.04 壓壓驚，順便把過程中碰到的問題與解法記錄下來&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Linux header在哪裡？絕對難不倒你</title>
    <link href="http://gundambox.github.io/2021/07/22/Linux-header%E5%9C%A8%E5%93%AA%E8%A3%A1%EF%BC%9F%E7%B5%95%E5%B0%8D%E9%9B%A3%E4%B8%8D%E5%80%92%E4%BD%A0/"/>
    <id>http://gundambox.github.io/2021/07/22/Linux-header%E5%9C%A8%E5%93%AA%E8%A3%A1%EF%BC%9F%E7%B5%95%E5%B0%8D%E9%9B%A3%E4%B8%8D%E5%80%92%E4%BD%A0/</id>
    <published>2021-07-22T14:18:29.000Z</published>
    <updated>2021-07-22T14:18:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>實作<a href="https://hackmd.io/@sysprog/linux2021-summer">暑期Linux 核心課程</a>的前置遇到問題，記錄一下</p><a id="more"></a><h2 id="問題"><a href="#問題" class="headerlink" title="問題"></a>問題</h2><p>目前習慣用 WSL 開發，在建立環境的第一步就遇到 WSL 環境找不到 linux-headers 的問題</p><h2 id="如何解"><a href="#如何解" class="headerlink" title="如何解"></a>如何解</h2><p>apt-cache 找不到就只能到官方 <a href="https://github.com/microsoft/WSL2-Linux-Kernel">Repo</a> 找</p><ol><li><p>git clone &amp; check</p><ol><li><p>clone</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/microsoft/WSL2-Linux-Kernel.git</span><br></pre></td></tr></table></figure></li><li><p>確認自己 WSL 的 kernel</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br><span class="line"><span class="comment"># 4.19.128-microsoft-standard</span></span><br></pre></td></tr></table></figure></li><li><p>checkout 版本</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> WSL2-Linux-Kernel</span><br><span class="line">git checkout 4.19.128-microsoft-standard</span><br></pre></td></tr></table></figure></li></ol></li><li><p>不想 Clone 也可以抓對應版本的 Release 下來 (optional)</p><ol><li><p>uname</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br><span class="line"><span class="comment"># 4.19.128-microsoft-standard</span></span><br></pre></td></tr></table></figure></li><li><p>抓 release</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/microsoft/WSL2-Linux-Kernel/archive/refs/tags/4.19.128-microsoft-standard.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解壓縮</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf 4.19.128-microsoft-standard.tar.gz</span><br></pre></td></tr></table></figure></li></ol></li><li><p>安裝必要套件</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install build-essential</span><br></pre></td></tr></table></figure></li><li><p>安裝 linux header</p><p> 從 google 上找到兩種安裝過程</p><ol><li><p><a href="https://www.programmersought.com/article/72858348551/">LINUX kernel module under WSL2</a></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo zcat /proc/config.gz &gt; .config</span><br><span class="line">make -j $(nproc)</span><br><span class="line">sudo make -j $(nproc) modules_install</span><br></pre></td></tr></table></figure></li><li><p><a href="https://oftime.net/2021/01/16/win-bpf/">在 WSL2 环境下安装 BPF 工具链</a> </p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cp Microsoft/config-wsl .config</span><br><span class="line">make oldconfig &amp;&amp; make prepare</span><br><span class="line">make scripts</span><br><span class="line">make modules</span><br><span class="line">make modules_install</span><br></pre></td></tr></table></figure></li></ol><p> <strong>注</strong>: 缺少套件就用 <code>apt-get install</code> 解決，權限不夠就 <code>sudo</code> 解決(誤)</p></li></ol><h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>兩種安裝方法看不出有什麼差別，之後弄懂了再補上</p><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><a href="https://oftime.net/2021/01/16/win-bpf/">在 WSL2 环境下安装 BPF 工具链</a> </li><li><a href="https://www.programmersought.com/article/72858348551/">LINUX kernel module under WSL2</a></li><li><a href="https://github.com/microsoft/WSL2-Linux-Kernel">WSL2 GitHub Repo</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;實作&lt;a href=&quot;https://hackmd.io/@sysprog/linux2021-summer&quot;&gt;暑期Linux 核心課程&lt;/a&gt;的前置遇到問題，記錄一下&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>第一次寫Makefile就...放棄(誤)</title>
    <link href="http://gundambox.github.io/2021/04/11/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%AF%ABMakefile%E5%B0%B1-%E6%94%BE%E6%A3%84-%E8%AA%A4/"/>
    <id>http://gundambox.github.io/2021/04/11/%E7%AC%AC%E4%B8%80%E6%AC%A1%E5%AF%ABMakefile%E5%B0%B1-%E6%94%BE%E6%A3%84-%E8%AA%A4/</id>
    <published>2021-04-11T10:31:09.000Z</published>
    <updated>2021-04-11T10:31:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>太久沒寫Makefile，寫一篇廢文把複習過程記錄下來</p><a id="more"></a><h2 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h2><ol><li>obj 資料夾要保持 src 的結構</li><li>每個 source code 要編譯成獨立的 object 檔案</li></ol><h2 id="過程"><a href="#過程" class="headerlink" title="過程"></a>過程</h2><h3 id="實作之前"><a href="#實作之前" class="headerlink" title="實作之前"></a>實作之前</h3><p>Makefile 基礎語法為:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">tagret: prerequires</span></span><br><span class="line">    command</span><br></pre></td></tr></table></figure><p>用樹的 Postorder Traversal 來理解就是，每個 target 都是 node，prerequires 則是要往下拜訪的 node，command 則是拜訪 child node 完之後要執行的動作，例如:</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">all: compile</span></span><br><span class="line">    gcc -o main main.o helloworld.o</span><br><span class="line"><span class="section">compile:</span></span><br><span class="line">    gcc -c helloworld.c</span><br><span class="line">    gcc -c main.c</span><br></pre></td></tr></table></figure><p>執行 <code>make</code> 指令後，makefile 在沒有指定的情況下，預設從第一個 target 作展開。</p><ol><li><p><code>all</code> 底下還有 <code>compile</code> 節點，往下拜訪 <code>compile</code></p></li><li><p><code>compile</code> 底下沒有節點，執行 <code>compile</code> 裡的 command。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -c helloworld.c</span><br><span class="line">gcc -c main.c</span><br></pre></td></tr></table></figure></li><li><p>底下的節點都拜訪並執行完 command 了，回到上一層節點 <code>all</code> ，執行 command</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -o main main.o helloworld.o</span><br></pre></td></tr></table></figure></li><li><p>輸出大概長這樣</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gcc -c helloworld.c</span><br><span class="line">gcc -c main.c</span><br><span class="line">gcc -o main main.o helloworld.o</span><br></pre></td></tr></table></figure></li></ol><h3 id="其他語法"><a href="#其他語法" class="headerlink" title="其他語法"></a>其他語法</h3><p>因為要展開整個專案底下的 source code，編譯階段如果是手動加入每個檔案不如直接寫腳本，還有寫死參數會造成日後維護困難，所以要用上其他語法</p><ol><li><p>變數</p><p> 指定編譯器，之後要替換可以不用一個一個改，也不用擔心漏改或改錯等問題</p> <figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">COMPILER := gcc</span><br></pre></td></tr></table></figure></li><li><p>字串操作</p><ol><li><p>列出 src 資料夾以下所有 *.c 檔案</p><p> 執行 <code>shell find</code> 來尋找檔案</p> <figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SRCDIR := src</span><br><span class="line">SRCEXT := c</span><br><span class="line">SOURCES := <span class="variable">$(<span class="built_in">shell</span> find <span class="variable">$(SRCDIR)</span> -type f -name *.<span class="variable">$(SRCEXT)</span>)</span></span><br></pre></td></tr></table></figure></li><li><p>替換 *.c 檔案的路徑作為 *.o 檔案的路徑</p><ol><li><p>將含 *.c 結尾的字串都轉換成 *.o 結尾</p> <figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">$(SOURCES:.<span class="variable">$(SRCEXT)</span>=.<span class="variable">$(OBJEXT)</span></span></span><br></pre></td></tr></table></figure></li><li><p>替換資料夾</p><p> 語法為 <code>$(patsubst pattern,replacement,text)</code>，將 <code>test</code> 中符合 <code>pattern</code> 的字串用 <code>replacement</code> 取代。下列語法的意思是將 <code>$(SOURCES:.$(SRCEXT)=.$(OBJEXT)</code> 內含 <code>src</code> 的字串都替換成 <code>obj</code></p> <figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">SRCDIR := src</span><br><span class="line">BUILDDIR := obj</span><br><span class="line">SRCEXT := c</span><br><span class="line">OBJEXT := o</span><br><span class="line">OBJECTS := <span class="variable">$(<span class="built_in">patsubst</span> <span class="variable">$(SRCDIR)</span>/%, <span class="variable">$(BUILDDIR)</span>/%, $(SOURCES:.<span class="variable">$(SRCEXT)</span>=.<span class="variable">$(OBJEXT)</span>)</span>)</span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><h3 id="整合"><a href="#整合" class="headerlink" title="整合"></a>整合</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Compiler and Linker</span></span><br><span class="line">CC          := gcc</span><br><span class="line"></span><br><span class="line"><span class="comment">#The Target Binary Program</span></span><br><span class="line">TARGET      := main</span><br><span class="line"></span><br><span class="line"><span class="comment">#The Directories, Source, Includes, Objects, Binary and Resources</span></span><br><span class="line">SRCDIR      := src</span><br><span class="line">BUILDDIR    := obj</span><br><span class="line">TARGETDIR   := bin</span><br><span class="line">SRCEXT      := c</span><br><span class="line">OBJEXT      := o</span><br><span class="line"></span><br><span class="line"><span class="comment">#Flags, Libraries and Includes</span></span><br><span class="line">CFLAGS      := -Wall -O3 -g</span><br><span class="line">LIB         := </span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#DO NOT EDIT BELOW THIS LINE</span></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------------------</span></span><br><span class="line">SOURCES     := <span class="variable">$(<span class="built_in">shell</span> find <span class="variable">$(SRCDIR)</span> -type f -name *.<span class="variable">$(SRCEXT)</span>)</span></span><br><span class="line">OBJECTS     := <span class="variable">$(<span class="built_in">patsubst</span> <span class="variable">$(SRCDIR)</span>/%,<span class="variable">$(BUILDDIR)</span>/%,$(SOURCES:.<span class="variable">$(SRCEXT)</span>=.<span class="variable">$(OBJEXT)</span>)</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#Defauilt Make</span></span><br><span class="line"><span class="section">all: directories <span class="variable">$(TARGET)</span></span></span><br><span class="line"></span><br><span class="line"><span class="section">directories:</span></span><br><span class="line">    @mkdir -p <span class="variable">$(TARGETDIR)</span></span><br><span class="line">    @mkdir -p <span class="variable">$(BUILDDIR)</span></span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">    @<span class="variable">$(RM)</span> -rf <span class="variable">$(TARGETDIR)</span></span><br><span class="line">    @<span class="variable">$(RM)</span> -rf <span class="variable">$(BUILDDIR)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Link</span></span><br><span class="line"><span class="variable">$(TARGET)</span>: <span class="variable">$(OBJECTS)</span></span><br><span class="line">    <span class="variable">$(CC)</span> -o <span class="variable">$(TARGETDIR)</span>/<span class="variable">$(TARGET)</span> <span class="variable">$^</span> <span class="variable">$(LIB)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Compile</span></span><br><span class="line"><span class="variable">$(BUILDDIR)</span>/%.<span class="variable">$(OBJEXT)</span>: <span class="variable">$(SRCDIR)</span>/%.<span class="variable">$(SRCEXT)</span></span><br><span class="line">    <span class="comment"># 建立對應的資料夾</span></span><br><span class="line">    @mkdir -p <span class="variable">$(<span class="built_in">dir</span> <span class="variable">$@</span>)</span></span><br><span class="line">    <span class="comment"># 編譯為 object 檔案</span></span><br><span class="line">    <span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> -c <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Non-File Targets</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">.PHONY</span>: all clean</span></span><br></pre></td></tr></table></figure><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><a href="https://stackoverflow.com/a/27794283">How to place object files in separate subdirectory</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;太久沒寫Makefile，寫一篇廢文把複習過程記錄下來&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>RSS 訂閱 Blogger 教學</title>
    <link href="http://gundambox.github.io/2021/01/11/RSS-%E8%A8%82%E9%96%B1-Blogger-%E6%95%99%E5%AD%B8/"/>
    <id>http://gundambox.github.io/2021/01/11/RSS-%E8%A8%82%E9%96%B1-Blogger-%E6%95%99%E5%AD%B8/</id>
    <published>2021-01-11T13:46:06.000Z</published>
    <updated>2021-01-11T13:46:06.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h2><p><img src="/2021/01/11/RSS-%E8%A8%82%E9%96%B1-Blogger-%E6%95%99%E5%AD%B8/01.%E8%B5%B7%E5%9B%A0.png" alt="起因"></p><p>雖然教學很多隨便查都有，不過還是寫一篇騙讚好了(大誤)</p><a id="more"></a><h2 id="什麼是-RSS"><a href="#什麼是-RSS" class="headerlink" title="什麼是 RSS"></a>什麼是 RSS</h2><p>摘自<a href="https://zh.wikipedia.org/zh-tw/RSS">維基百科</a>:</p><blockquote><p>RSS（全稱：RDF Site Summary；Really Simple Syndication），中文譯作簡易資訊聚合，也稱聚合內容，是一種訊息來源格式規範，用以聚合經常發布更新資料的網站，例如部落格文章、新聞、音訊或視訊的網摘。RSS檔案（或稱做摘要、網路摘要、或頻更新，提供到頻道）包含全文或是節錄的文字，再加上發布者所訂閱之網摘資料和授權的元資料。簡單來說 RSS 能夠讓使用者訂閱個人網站個人部落格，當訂閱的網站有新文章是能夠獲得通知。</p></blockquote><h2 id="為什麼要用-RSS"><a href="#為什麼要用-RSS" class="headerlink" title="為什麼要用 RSS"></a>為什麼要用 RSS</h2><p>你不能控制平台的演算法，但 RSS 可以。因為你的喜好就是演算法，你可以自己掌控資訊來源。當然「<a href="https://twblg.dict.edu.tw/holodict_new/result_detail.jsp?n_no=60157&curpage=1&sample=%E5%85%A9&radiobutton=1&querytarget=1&limit=100000&pagenum=1&rowcount=21">    Ū tsi̍t hó, bô nn̄g hó.(有一好，無兩好。)</a>」，想要拿回資訊的主導權，自己就要承擔義務，建議訂閱幾個異溫層的資訊來源作為平衡，避免像社群平台演算法一樣落入同溫層的陷阱。</p><p>以<a href="https://hornydragon.blogspot.com/">好色龍</a>的粉絲專頁為例，因為作者有經營 Blogger 網誌，<del>Fakebook</del>Facebook 的演算法又常降觸及。使用 RSS 就不用擔心 <del>ChiNa 審核人員</del>演算法發瘋了。而且使用 RSS 平台也可以設定通知，不用擔心搶不到頭香(誤)</p><h2 id="如何取得-RSS-連結-以Blogger為例"><a href="#如何取得-RSS-連結-以Blogger為例" class="headerlink" title="如何取得 RSS 連結(以Blogger為例)"></a>如何取得 RSS 連結(以Blogger為例)</h2><p>一般 Blogger 底下都會有 <code>訂閱： 文章 (Atom)</code> 出現，點進去就是 RSS 連結<br><img src="/2021/01/11/RSS-%E8%A8%82%E9%96%B1-Blogger-%E6%95%99%E5%AD%B8/02.%E5%A6%82%E4%BD%95%E5%8F%96%E5%BE%97RSS%E9%80%A3%E7%B5%90.png" alt="如何取得RSS連結"></p><h2 id="RSS-閱讀器"><a href="#RSS-閱讀器" class="headerlink" title="RSS 閱讀器"></a>RSS 閱讀器</h2><ol><li><a href="https://feedly.com/">Feedly</a><br> 2008 到現在的老牌閱讀器，讀取速度跟介面算不錯。專業版價格偏貴，值不值得看個人使用程度了。</li><li><a href="https://www.inoreader.com/">Inoreader</a><br> 2013 年推出的閱讀器，速度稍慢，專業版相對 Feedly 便宜。有廣告，升級專業版去除廣告體驗會比較好，介面稍微難用，習慣後覺得分類功能比 Feedly 強大。</li><li><a href="https://moztw.org/thunderbird/">Thunderbird</a><br> 跨平台電子郵件客戶端、新聞閱讀器、聚合器以及即時通訊軟體。不受到平台限制，但學習成本也最高，如果本身習慣 Linux 的人推薦使用(習慣 Linux 的人理論上應該都會使用 RSS 了 XD)</li><li><del>Flipboard 有推出中國特色的版本(踩到我的地雷)，所以就不附連結了</del></li></ol><h3 id="如何訂閱-以Feedly為例"><a href="#如何訂閱-以Feedly為例" class="headerlink" title="如何訂閱(以Feedly為例)"></a>如何訂閱(以Feedly為例)</h3><ul><li><p>訂閱<br>  到 <a href="https://feedly.com/">Feedly</a> 註冊帳號後</p><ol><li><p>側邊欄有個 <code>Follow New Sources</code></p><p><img src="/2021/01/11/RSS-%E8%A8%82%E9%96%B1-Blogger-%E6%95%99%E5%AD%B8/03.%E7%94%A8Feedly%E8%A8%82%E9%96%B1_1.png" alt="用Feedly訂閱1"></p></li><li><p>貼上前面取得的 RSS 連結<br><img src="/2021/01/11/RSS-%E8%A8%82%E9%96%B1-Blogger-%E6%95%99%E5%AD%B8/04.%E7%94%A8Feedly%E8%A8%82%E9%96%B1_2.png" alt="用Feedly訂閱2"></p></li><li><p>按下 Follow 即可</p></li></ol></li><li><p>閱讀</p><ul><li>網頁板畫面<br>  <img src="/2021/01/11/RSS-%E8%A8%82%E9%96%B1-Blogger-%E6%95%99%E5%AD%B8/05.%E7%94%A8Feedly%E8%A8%82%E9%96%B1_3.png" alt="用Feedly訂閱2"></li><li>App<br>  <a href="https://play.google.com/store/apps/details?id=com.devhd.feedly">Google Play</a><br>  <a href="https://apps.apple.com/tw/app/feedly-smart-news-reader/id396069556">App Store</a></li></ul></li></ul><h2 id="延伸閱讀"><a href="#延伸閱讀" class="headerlink" title="延伸閱讀"></a>延伸閱讀</h2><ol><li>Feedly<ul><li><a href="https://www.playpcesor.com/2013/03/feedly-google-reader.html">Feedly 完全上手教學，延續 Google Reader 閱讀器體驗</a></li><li><a href="https://ithelp.ithome.com.tw/articles/10210983">Feedly – 超好用的 RSS 免費訂閱服務完整攻略，讓你隨時接收訂閱網站的最新消息</a></li></ul></li><li>Inoreader<ul><li><a href="https://www.playpcesor.com/2018/01/inoreader-15.html">用 Inoreader 開始為自己閱讀作主：15步上手指南與訂閱包分享</a></li><li><a href="https://free.com.tw/inoreader/">Inoreader 輕巧、快速線上 RSS 閱讀器，訂閱網路新文章不漏接</a></li></ul></li><li>Thunderbird<ul><li><a href="https://ithelp.illinoisstate.edu/knowledge/880-using-thunderbird-to-read-and-manage-rss-feeds/">Using Thunderbird to read and manage RSS feeds</a></li></ul></li></ol><h2 id="結尾"><a href="#結尾" class="headerlink" title="結尾"></a>結尾</h2><p><del>又生出一篇廢文了</del></p><p>寫完這篇剛好想到</p><ol><li>把網誌的 Html 內容嵌入 Markdown</li><li>自架 Gitea 保存 Markdown 文章</li><li>同步 Gitea Repo 到 GitHub</li><li>在 GitHub 開 Page，找 open source 自幹評論區上去</li></ol><p>這樣是不是就可以無痛轉移了(?)<br>如果 Microsoft 哪天也發瘋，強迫 GitHub 下架 Repo<br>這樣舊文章跟評論也不用想辦法撈回來<br>頂多就是自架主機(?)<br>不過這種異想天開的想法等哪天有空再實驗</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2021/01/11/RSS-%E8%A8%82%E9%96%B1-Blogger-%E6%95%99%E5%AD%B8/01.%E8%B5%B7%E5%9B%A0.png&quot; alt=&quot;起因&quot;&gt;&lt;/p&gt;
&lt;p&gt;雖然教學很多隨便查都有，不過還是寫一篇騙讚好了(大誤)&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>ASP.NET Web.Config 連線字串加密</title>
    <link href="http://gundambox.github.io/2020/12/03/ASP-NET-Web-Config-%E9%80%A3%E7%B7%9A%E5%AD%97%E4%B8%B2%E5%8A%A0%E5%AF%86/"/>
    <id>http://gundambox.github.io/2020/12/03/ASP-NET-Web-Config-%E9%80%A3%E7%B7%9A%E5%AD%97%E4%B8%B2%E5%8A%A0%E5%AF%86/</id>
    <published>2020-12-03T15:06:31.000Z</published>
    <updated>2020-12-03T15:06:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近在整理以前練習的官方範例，想到 Web.Config 的連線字串應該要做保護。查了下資料寫個筆記，避免之後遇到上古時代的專案手忙腳亂。</p><a id="more"></a><h2 id="aspnet-regiis-位置"><a href="#aspnet-regiis-位置" class="headerlink" title="aspnet_regiis 位置"></a>aspnet_regiis 位置</h2><p>預設在 <code>%systemroot%\Microsoft.NET\Framework\&#123;versionNumber&#125;</code> 底下可以找到 <code>aspnet_regiis.exe</code></p><h2 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h2><ul><li><p>加密前</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">connectionStrings</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">add</span> <span class="attr">name</span>=<span class="string">&quot;NorthwindEntities&quot;</span> </span></span><br><span class="line"><span class="tag">        <span class="attr">connectionString</span>=<span class="string">&quot;metadata=res://*/NorthwindModels.csdl|res://*/NorthwindModels.ssdl|res://*/NorthwindModels.msl;provider=System.Data.SqlClient;provider connection string=&#x27;data source=<span class="symbol">&amp;quot;</span>localhost, 1433<span class="symbol">&amp;quot;</span>;initial catalog=Northwind;persist security info=True;user id=********;password=**********;pooling=False;multipleactiveresultsets=False;connect timeout=60;trustservercertificate=False;App=EntityFramework&#x27;&quot;</span></span></span><br><span class="line"><span class="tag">        <span class="attr">providerName</span>=<span class="string">&quot;System.Data.EntityClient&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">connectionStrings</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>加密指令</p>  <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># aspnet_regiis -pef [section] [path]</span></span><br><span class="line">.\aspnet_regiis.exe <span class="literal">-pef</span> <span class="string">&quot;connectionStrings&quot;</span> <span class="string">&quot;D:\Repository\SampleApplication&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>加密後</p>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">connectionStrings</span> <span class="attr">configProtectionProvider</span>=<span class="string">&quot;RsaProtectedConfigurationProvider&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">EncryptedData</span> <span class="attr">Type</span>=<span class="string">&quot;http://www.w3.org/2001/04/xmlenc#Element&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2001/04/xmlenc#&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EncryptionMethod</span> <span class="attr">Algorithm</span>=<span class="string">&quot;http://www.w3.org/2001/04/xmlenc#aes256-cbc&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">KeyInfo</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/09/xmldsig#&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">EncryptedKey</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2001/04/xmlenc#&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EncryptionMethod</span> <span class="attr">Algorithm</span>=<span class="string">&quot;http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">KeyInfo</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/09/xmldsig#&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">KeyName</span>&gt;</span>Rsa Key<span class="tag">&lt;/<span class="name">KeyName</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">KeyInfo</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">CipherData</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">CipherValue</span>&gt;</span>.....<span class="tag">&lt;/<span class="name">CipherValue</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">CipherData</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">EncryptedKey</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">KeyInfo</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CipherData</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CipherValue</span>&gt;</span>......<span class="tag">&lt;/<span class="name">CipherValue</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">CipherData</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">EncryptedData</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">connectionStrings</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="解密"><a href="#解密" class="headerlink" title="解密"></a>解密</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># aspnet_regiis -pdf [section] [path]</span></span><br><span class="line">.\aspnet_regiis.exe <span class="literal">-pdf</span> <span class="string">&quot;connectionStrings&quot;</span> <span class="string">&quot;D:\Repository\SampleApplication&quot;</span></span><br></pre></td></tr></table></figure><h2 id="延伸閱讀"><a href="#延伸閱讀" class="headerlink" title="延伸閱讀"></a>延伸閱讀</h2><p><a href="https://blog.darkthread.net/blog/web-config-connstr-encryptor-v09-cht/">web.config連線字串加密工具</a></p><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><a href="https://docs.microsoft.com/en-us/previous-versions/dotnet/netframework-3.0/dx0f3cf2(v=vs.85)?redirectedfrom=MSDN">How to: Secure Connection Strings When Using Data Source Controls</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近在整理以前練習的官方範例，想到 Web.Config 的連線字串應該要做保護。查了下資料寫個筆記，避免之後遇到上古時代的專案手忙腳亂。&lt;/p&gt;</summary>
    
    
    
    <category term="ASP.NET" scheme="http://gundambox.github.io/categories/ASP-NET/"/>
    
    
    <category term="C#" scheme="http://gundambox.github.io/tags/C/"/>
    
    <category term="ASP.NET" scheme="http://gundambox.github.io/tags/ASP-NET/"/>
    
  </entry>
  
  <entry>
    <title>在 Azure DevOps 執行 NuGet Pack 遇到 401(Unauthorized)</title>
    <link href="http://gundambox.github.io/2020/11/09/%E5%9C%A8-Azure-DevOps-%E5%9F%B7%E8%A1%8C-NuGet-Pack-%E9%81%87%E5%88%B0-401-Unauthorized/"/>
    <id>http://gundambox.github.io/2020/11/09/%E5%9C%A8-Azure-DevOps-%E5%9F%B7%E8%A1%8C-NuGet-Pack-%E9%81%87%E5%88%B0-401-Unauthorized/</id>
    <published>2020-11-09T02:32:45.000Z</published>
    <updated>2020-11-09T02:32:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>打包 NuGet Package 到公司的 Azure DevOps Services feeds 的時候遇到的神奇問題</p><a id="more"></a><h2 id="問題描述"><a href="#問題描述" class="headerlink" title="問題描述"></a>問題描述</h2><p>Azure DevOps 上執行 <code>dotnet pack</code> 遇到這個問題</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Build FAILED.</span><br><span class="line"></span><br><span class="line">&quot;D:\a\1\s\src\***********.csproj\***********.csproj&quot; (Restore target) (1) -&gt;</span><br><span class="line">(Restore target) -&gt; </span><br><span class="line">C:\hostedtoolcache\windows\dotnet\sdk\3.1.403\NuGet.targets(128,5): error : Unable to load the service index for source https:&#x2F;&#x2F;pkgs.dev.azure.com&#x2F;***********&#x2F;_packaging&#x2F;***********&#x2F;nuget&#x2F;v3&#x2F;index.json. [D:\a\1\s\src\***********\***********.csproj]</span><br><span class="line">C:\hostedtoolcache\windows\dotnet\sdk\3.1.403\NuGet.targets(128,5): error :   Response status code does not indicate success: 401 (Unauthorized). [D:\a\1\s\src\***********\***********.csproj]</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>起初以為是 <strong>Azure DevOps Services feeds</strong> 設定有問題，但仔細一想，那也應該是在 <code>dotnet push</code> 的時候出問題。</p><p>跟公司同事討論了很久才注意到 <strong>Restore</strong> 這個字，於是試著在 pack 之前加上 <code>dotnet restore</code>，然後就解決了(WTF)。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">task:</span> <span class="string">DotNetCoreCLI@2</span></span><br><span class="line">    <span class="attr">displayName:</span> <span class="string">Restore</span> <span class="string">source</span> <span class="string">project&#x27;s</span> <span class="string">NuGet</span> <span class="string">package(s)</span></span><br><span class="line">    <span class="attr">inputs:</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">restore</span></span><br><span class="line">        <span class="attr">projects:</span> <span class="string">$(sourceProject)</span></span><br><span class="line">        <span class="attr">feedsToUse:</span> <span class="string">select</span></span><br></pre></td></tr></table></figure><h2 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h2><p><code>Response status code does not indicate success: 401 (Unauthorized).</code> 這個錯誤訊息太不明顯了，超容易被誤導</p><p>而且我到現在還是不明白中間發生什麼事，哪天在官方文件找到解答再補上來</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;打包 NuGet Package 到公司的 Azure DevOps Services feeds 的時候遇到的神奇問題&lt;/p&gt;</summary>
    
    
    
    <category term="Azure DevOps" scheme="http://gundambox.github.io/categories/Azure-DevOps/"/>
    
    
    <category term="Azure DevOps" scheme="http://gundambox.github.io/tags/Azure-DevOps/"/>
    
    <category term="工程師的通靈日常" scheme="http://gundambox.github.io/tags/%E5%B7%A5%E7%A8%8B%E5%B8%AB%E7%9A%84%E9%80%9A%E9%9D%88%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>WSL 安裝 zsh</title>
    <link href="http://gundambox.github.io/2020/11/04/WSL-%E5%AE%89%E8%A3%9D-zsh/"/>
    <id>http://gundambox.github.io/2020/11/04/WSL-%E5%AE%89%E8%A3%9D-zsh/</id>
    <published>2020-11-04T13:55:52.000Z</published>
    <updated>2020-11-04T13:55:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>用 WSL 寫 code 當然是要用華麗的 oh-my-zsh 啊(誤)</p><a id="more"></a><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><h3 id="zsh"><a href="#zsh" class="headerlink" title="zsh"></a>zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install zsh</span><br><span class="line">$ <span class="built_in">which</span> zsh</span><br><span class="line">/usr/bin/zsh</span><br><span class="line">$ chsh -s /usr/bin/zsh</span><br></pre></td></tr></table></figure><h3 id="oh-my-zsh"><a href="#oh-my-zsh" class="headerlink" title="oh-my-zsh"></a>oh-my-zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">&quot;<span class="subst">$(wget https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh -O -)</span>&quot;</span></span><br></pre></td></tr></table></figure><h3 id="theme"><a href="#theme" class="headerlink" title="theme"></a>theme</h3><ol><li>Powerline <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install fonts-powerline</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;⮀ ± ⭠ ➦ ✔ ✘ ⚡&quot;</span> <span class="comment"># Test</span></span><br><span class="line">⮀ ± ⭠ ➦ ✔ ✘ ⚡</span><br></pre></td></tr></table></figure></li><li>Theme <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> <span class="variable">$ZSH_CUSTOM</span>/themes</span><br><span class="line">wget https://raw.githubusercontent.com/caiogondim/bullet-train-oh-my-zsh-theme/master/bullet-train.zsh-theme</span><br><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure> 修改 ZSH_THEME <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Find and change this</span><br><span class="line">ZSH_THEME&#x3D;&quot;robbyrussell&quot;</span><br><span class="line"></span><br><span class="line"># To this</span><br><span class="line">ZSH_THEME&#x3D;&quot;bullet-train&quot;</span><br></pre></td></tr></table></figure></li></ol><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><a href="https://hackmd.io/@billsun/BJByCIUHf?type=view#22-%E5%AE%89%E8%A3%9D-zsh">Windows Subsystem for Linux (WSL) 環境設定</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;用 WSL 寫 code 當然是要用華麗的 oh-my-zsh 啊(誤)&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>VS Code 整合 WSL</title>
    <link href="http://gundambox.github.io/2020/11/02/VS-Code-%E6%95%B4%E5%90%88-WSL/"/>
    <id>http://gundambox.github.io/2020/11/02/VS-Code-%E6%95%B4%E5%90%88-WSL/</id>
    <published>2020-11-02T14:07:47.000Z</published>
    <updated>2020-11-02T14:07:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前都是用 <a href="https://www.virtualbox.org/">VirtualBox</a> 裝 Ubuntu 當做寫 C/C++ 的環境，趁著整理系統的機會來玩玩 WSL</p><a id="more"></a><h2 id="安裝"><a href="#安裝" class="headerlink" title="安裝"></a>安裝</h2><h3 id="安裝-WSL"><a href="#安裝-WSL" class="headerlink" title="安裝 WSL"></a>安裝 WSL</h3><p>可以參考<a href="http://gundambox.github.io/2020/11/02/%E5%9C%A8-Windows10-%E4%BD%BF%E7%94%A8-WSL-GCC/">上一篇</a></p><h3 id="安裝-VS-Code"><a href="#安裝-VS-Code" class="headerlink" title="安裝 VS Code"></a>安裝 VS Code</h3><p>到官方網站下載 <a href="https://code.visualstudio.com/download">VS Code</a></p><h3 id="安裝-Extension"><a href="#安裝-Extension" class="headerlink" title="安裝 Extension"></a>安裝 Extension</h3><p>下載 <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-wsl">Remote - WSL</a> extension 並安裝到 VS Code</p><h3 id="安裝-VS-Code-Server"><a href="#安裝-VS-Code-Server" class="headerlink" title="安裝 VS Code Server"></a>安裝 VS Code Server</h3><ol><li>啟動 WSL <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br></pre></td></tr></table></figure></li><li>在 wsl 的環境下使用 VS Code 開啟資料夾 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /mnt/d/Repository    <span class="comment"># source code 習慣放在 D:\Repository</span></span><br><span class="line">mkdir HelloWorld        <span class="comment"># 建立 project 資料夾</span></span><br><span class="line"><span class="built_in">cd</span> HelloWorld           </span><br><span class="line">code .</span><br></pre></td></tr></table></figure></li><li>這時候 VS Code 就會詢問安裝 <code>VS Code Server</code> 了<br> 安裝完成並成功開啟資料夾後<br> 可以看到資料夾後面帶有 <code>[WSL:UBUNTU]</code>，<br> <img src="/2020/11/02/VS-Code-%E6%95%B4%E5%90%88-WSL/file-explorer-wsl.png"><br> 可以注意到左下角的狀態列變成 <code>WSL:Ubuntu</code><br> <img src="/2020/11/02/VS-Code-%E6%95%B4%E5%90%88-WSL/wsl-status-bar.png"></li></ol><h3 id="在-WSL-整合環境安裝-Extension"><a href="#在-WSL-整合環境安裝-Extension" class="headerlink" title="在 WSL 整合環境安裝 Extension"></a>在 WSL 整合環境安裝 Extension</h3><p>在剛剛打開的 VS Code 裡面，按下 <code>Ctrl+Shift+X</code> 即可打開延伸模組，搜尋安裝 <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools">C/C++</a> extension</p><h2 id="測試"><a href="#測試" class="headerlink" title="測試"></a>測試</h2><ol><li><p>main.cpp</p> <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; msg &#123;<span class="string">&quot;Hello&quot;</span>, <span class="string">&quot;C++&quot;</span>, <span class="string">&quot;World&quot;</span>, <span class="string">&quot;from&quot;</span>, <span class="string">&quot;VS Code&quot;</span>, <span class="string">&quot;and the C++ extension!&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">const</span> <span class="built_in">string</span>&amp; word : msg)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; word &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>編譯<br> 可以直接按 F5，直接使用預設產生的設定值<br> <img src="/2020/11/02/VS-Code-%E6%95%B4%E5%90%88-WSL/build-and-debug-active-file.png"></p></li><li><p>執行<br> 在終端機執行剛剛編譯出來的檔案</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./main</span><br></pre></td></tr></table></figure><p> <img src="/2020/11/02/VS-Code-%E6%95%B4%E5%90%88-WSL/wsl-execution-result.png" alt="執行結果"></p></li></ol><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><a href="https://code.visualstudio.com/docs/cpp/config-wsl">Using C++ and WSL in VS Code</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前都是用 &lt;a href=&quot;https://www.virtualbox.org/&quot;&gt;VirtualBox&lt;/a&gt; 裝 Ubuntu 當做寫 C/C++ 的環境，趁著整理系統的機會來玩玩 WSL&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>在 Windows10 使用 WSL + GCC</title>
    <link href="http://gundambox.github.io/2020/11/02/%E5%9C%A8-Windows10-%E4%BD%BF%E7%94%A8-WSL-GCC/"/>
    <id>http://gundambox.github.io/2020/11/02/%E5%9C%A8-Windows10-%E4%BD%BF%E7%94%A8-WSL-GCC/</id>
    <published>2020-11-02T11:06:43.000Z</published>
    <updated>2020-11-02T11:06:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>雖然安裝過程肯定可以從 Google 找到，但為了避免遇到新系統臨時失憶，還是做筆記比較好</p><a id="more"></a><h2 id="安裝過程"><a href="#安裝過程" class="headerlink" title="安裝過程"></a>安裝過程</h2><h3 id="安裝-WSL"><a href="#安裝-WSL" class="headerlink" title="安裝 WSL"></a>安裝 WSL</h3><p>參考 <a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">Windows Subsystem for Linux Installation Guide for Windows 10</a> 官方文件安裝</p><ol><li>啟用 WSL <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:Microsoft<span class="literal">-Windows</span><span class="literal">-Subsystem</span><span class="literal">-Linux</span> /all /norestart</span><br></pre></td></tr></table></figure></li><li>更新至 WSL 2<ul><li>x64 架構，必須是 <strong>Windows10, version 1903</strong> 或更新版本，建置編號為 <strong>18362</strong> 或更新編號</li><li>arm64 架構，必須是 <strong>Windows10, version 2004</strong> 或更新版本，建置編號為 <strong>19041</strong> 或更新編號<br>簡單的說，給我更新到最新版</li></ul></li><li>啟用虛擬機器功能 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /<span class="built_in">enable-feature</span> /featurename:VirtualMachinePlatform /all /norestart</span><br></pre></td></tr></table></figure></li><li>安裝 Linux kernel 更新套件<ul><li><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">X64 package</a></li><li><a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_arm64.msi">ARM64 package</a></li></ul></li><li>將 WSL 2 設為預設版本 <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl -<span class="literal">-set</span><span class="literal">-default</span><span class="literal">-version</span> <span class="number">2</span></span><br></pre></td></tr></table></figure></li><li>安裝 Linux<br> 這邊就是看個人喜好了，我習慣使用 Ubuntu 上一個 LTS 版本<br> 因為常被最新的 LTS 雷，所以這邊選用 <a href="https://www.microsoft.com/store/apps/9N9TNGVNDL3Q">Ubuntu 18.04 LTS</a><br> 安裝完後直接啟用，會直接跳出視窗讓你設定 username 及 password<br> <img src="/2020/11/02/%E5%9C%A8-Windows10-%E4%BD%BF%E7%94%A8-WSL-GCC/ubuntuinstall.png" alt="Ubuntu安裝畫面"></li></ol><h3 id="安裝-Windows-Terminal-optional"><a href="#安裝-Windows-Terminal-optional" class="headerlink" title="安裝 Windows Terminal (optional)"></a>安裝 Windows Terminal (optional)</h3><p>直接到 <a href="https://docs.microsoft.com/zh-tw/windows/terminal/get-started">Microsoft Store</a> 下載安裝</p><p>詳細 Config 文件直接看<a href="https://aka.ms/terminal">官方文件</a></p><h3 id="安裝-GCC"><a href="#安裝-GCC" class="headerlink" title="安裝 GCC"></a>安裝 GCC</h3><ol><li>啟動 WSL <figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash</span><br></pre></td></tr></table></figure></li><li>安裝編譯環境 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install build-essential gcc g++ gdb</span><br></pre></td></tr></table></figure></li><li>測試 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">whereis g++</span><br><span class="line">whereis gdb</span><br></pre></td></tr></table></figure></li></ol><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><a href="https://docs.microsoft.com/en-us/windows/wsl/install-win10">Windows Subsystem for Linux Installation Guide for Windows 10</a></li><li><a href="https://docs.microsoft.com/zh-tw/windows/terminal/get-started">Using C++ and WSL in VS Code</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;雖然安裝過程肯定可以從 Google 找到，但為了避免遇到新系統臨時失憶，還是做筆記比較好&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>棄坑 Notion 及尋找替代方案</title>
    <link href="http://gundambox.github.io/2020/10/28/%E6%A3%84%E5%9D%91-Notion-%E5%8F%8A%E5%B0%8B%E6%89%BE%E6%9B%BF%E4%BB%A3%E6%96%B9%E6%A1%88/"/>
    <id>http://gundambox.github.io/2020/10/28/%E6%A3%84%E5%9D%91-Notion-%E5%8F%8A%E5%B0%8B%E6%89%BE%E6%9B%BF%E4%BB%A3%E6%96%B9%E6%A1%88/</id>
    <published>2020-10-28T02:21:52.000Z</published>
    <updated>2020-10-28T02:21:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>雖然 Notion 筆記軟體不錯用，但中間遇到一些問題，讓我重新檢視是否需要這軟體</p><a id="more"></a><h2 id="棄坑動機"><a href="#棄坑動機" class="headerlink" title="棄坑動機"></a>棄坑動機</h2><ol><li><p>窮 (誤)</p></li><li><p>大部分網頁 Notion Web Clipper 都可以解析，但少部分還是會出問題，做額外的處理容易打斷思考</p></li><li><p>Notion 的權限設定麻煩 (懶)</p></li><li><p>Notion 很難備份</p></li><li><p>Notion 表格計算功能用在筆記上雖然方便，但真的要做大型表格計算還是 Microsoft Excel 或 LibreOffice Calc 比較實際</p></li><li><p>使用時機多數為消化之前擷取的網頁，用來寫筆記的時間較少。</p></li></ol><h2 id="替代方案"><a href="#替代方案" class="headerlink" title="替代方案"></a>替代方案</h2><h3 id="Web-Clipper-替代方案-MaoXian-Web-Clipper"><a href="#Web-Clipper-替代方案-MaoXian-Web-Clipper" class="headerlink" title="Web Clipper 替代方案 - MaoXian Web Clipper"></a>Web Clipper 替代方案 - <a href="https://mika-cn.github.io/maoxian-web-clipper/index.html">MaoXian Web Clipper</a></h3><h4 id="優點"><a href="#優點" class="headerlink" title="優點"></a>優點</h4><ol><li><p>Open Source</p></li><li><p>可以在擷取網頁的時候選擇 HTML DOM 元素，可以避開解析網頁的問題<br> (將 HTML DOM 、Js、Css 及 Font 檔案全部存起來哪會出問題XD)</p></li><li><p>輕便，不用登入帳號</p></li></ol><h4 id="缺點"><a href="#缺點" class="headerlink" title="缺點"></a>缺點</h4><ol><li><p>預設下載位置是瀏覽器的下載資料夾。如果瀏覽器設定每次下載都詢問的話，擷取網頁的過程中所有檔案都會詢問一次要下載到哪裡 (擷取方式是優點也是缺點XD)</p></li><li><p>沒辦法同步 (還是可以拐彎解決)</p></li></ol><h4 id="缺點改善"><a href="#缺點改善" class="headerlink" title="缺點改善"></a>缺點改善</h4><ol><li><p>瀏覽器每次下載都詢問改成固定下載位置就好，而且從任何軟體下載的東西都存到固定的資料夾也比較方便找檔案</p></li><li><p>同步問題可以靠雲端硬碟或 NAS 資料夾解決，但還是會遇到資料夾結構的問題，這時候建一個 Symbolic link 就可以搞定</p><ul><li><p>Windows</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mklink /d <span class="string">&quot;&#123;Download Directory&#125;\WebClipper&quot;</span> <span class="string">&quot;&#123;NAS or Cloud Storage Directory&#125;\WebClipper&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>Ubuntu</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s <span class="string">&quot;&#123;NAS or Cloud Storage Directory&#125;\WebClipper&quot;</span> <span class="string">&quot;&#123;Download Directory&#125;\WebClipper&quot;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h3 id="筆記軟體替代方案-Joplin"><a href="#筆記軟體替代方案-Joplin" class="headerlink" title="筆記軟體替代方案 - Joplin"></a>筆記軟體替代方案 - <a href="https://github.com/laurent22/joplin">Joplin</a></h3><p>選用的原因不外乎</p><ol><li><p>Open Source</p></li><li><p>筆記功能與 Notion 無異</p></li><li><p>同步問題可以靠前面說的雲端硬碟或 NAS 資料夾解決</p></li><li><p>不用擔心權限。公開的筆記就放到 <a href="http://gundambox.github.io/">github.io</a> 上，私人的就備份在 NAS</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;雖然 Notion 筆記軟體不錯用，但中間遇到一些問題，讓我重新檢視是否需要這軟體&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hexo部署(GitHub Actions)</title>
    <link href="http://gundambox.github.io/2020/10/24/Hexo%E9%83%A8%E7%BD%B2-GitHub-Actions/"/>
    <id>http://gundambox.github.io/2020/10/24/Hexo%E9%83%A8%E7%BD%B2-GitHub-Actions/</id>
    <published>2020-10-24T13:10:45.000Z</published>
    <updated>2020-10-24T13:10:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>之前的文章都只儲存在本機，現在想想以前怎麼這麼蠢，藉著這次更新就順便設定 Private Repository 跟 GitHub Workflow 吧</p><a id="more"></a><h2 id="產生-SSH-Key"><a href="#產生-SSH-Key" class="headerlink" title="產生 SSH Key"></a>產生 SSH Key</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;gundambox.shi@gmail.com&quot;</span></span><br></pre></td></tr></table></figure><p>產生過程中出現 <code>Enter passphrase (empty for no passphrase):</code> 的時候</p><p>不要輸入，直接按 <code>enter</code> 跳過</p><h2 id="在-Private-Repository-加入-Private-Key"><a href="#在-Private-Repository-加入-Private-Key" class="headerlink" title="在 Private Repository 加入 Private Key"></a>在 Private Repository 加入 Private Key</h2><p>Private Repository -&gt; Settings -&gt; Secrets -&gt; New Secret</p><p>將剛剛產生的私鑰複製貼上，並將名稱命名為 <code>hexo</code></p><p><img src="/2020/10/24/Hexo%E9%83%A8%E7%BD%B2-GitHub-Actions/pasted-0.png" alt="加入Private Key"></p><h2 id="在-Public-Repository-加入-Public-Key"><a href="#在-Public-Repository-加入-Public-Key" class="headerlink" title="在 Public Repository 加入 Public Key"></a>在 Public Repository 加入 Public Key</h2><p>Public Repository -&gt; Settings -&gt; Deploy keys -&gt; Add deploy key</p><p>將剛剛產生的公鑰複製貼上，並將名稱命名為 <code>hexo</code></p><p>記得勾選 “Allow write access”，不然會炸掉XD</p><p><img src="/2020/10/24/Hexo%E9%83%A8%E7%BD%B2-GitHub-Actions/pasted-1.png" alt="加入 Public Key"></p><h2 id="建立-GitHub-Actions"><a href="#建立-GitHub-Actions" class="headerlink" title="建立 GitHub Actions"></a>建立 GitHub Actions</h2><ol><li><p>建立 .github/workflows/hexoActions.yml</p> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir .github&#x2F;workflows</span><br><span class="line">vim hexoActions.yml</span><br></pre></td></tr></table></figure></li><li><p>修改 action</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">&#x27;hexo deploy&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line"><span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">master</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Checkout</span></span><br><span class="line">    <span class="attr">uses:</span> <span class="string">actions/checkout@v1</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">Use</span> <span class="string">Node.js</span> <span class="number">12.</span><span class="string">x</span></span><br><span class="line">    <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">    <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">init)init</span> <span class="string">ssh</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">mkdir</span> <span class="string">-p</span> <span class="string">~/.ssh/</span></span><br><span class="line">        <span class="string">echo</span> <span class="string">&quot;$<span class="template-variable">&#123;&#123;secrets.HEXO&#125;&#125;</span>&quot;</span> <span class="string">&gt;</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">        <span class="string">chmod</span> <span class="number">600</span> <span class="string">~/.ssh/id_rsa</span></span><br><span class="line">        <span class="string">ssh-keyscan</span> <span class="string">github.com</span> <span class="string">&gt;&gt;</span> <span class="string">~/.ssh/known_hosts</span></span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.name</span> <span class="string">&quot;YOUR_USERNAME&quot;</span></span><br><span class="line">        <span class="string">git</span> <span class="string">config</span> <span class="string">--global</span> <span class="string">user.email</span> <span class="string">&quot;YOUR_EMAIL&quot;</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">A)npm</span> <span class="string">install</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">B)npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">npm</span> <span class="string">install</span> <span class="string">-g</span> <span class="string">hexo-cli</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">C)</span> <span class="string">hexo</span> <span class="string">d</span> <span class="string">-g</span></span><br><span class="line">    <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line">        <span class="string">hexo</span> <span class="string">d</span> <span class="string">-g</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="設定-hexo-config-yml"><a href="#設定-hexo-config-yml" class="headerlink" title="設定 hexo/_config.yml"></a>設定 hexo/_config.yml</h2><p>原本的 <code>_config.yml</code> 設定</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> </span><br><span class="line">        <span class="attr">github:</span> <span class="string">https://github.com/GundamBox/gundambox.github.io.git</span></span><br><span class="line">  </span><br></pre></td></tr></table></figure><p>改成</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">    <span class="attr">repo:</span> <span class="string">git@github.com:GundamBox/gundambox.github.io.git</span></span><br><span class="line">    <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h2 id="確認-Actions-執行結果"><a href="#確認-Actions-執行結果" class="headerlink" title="確認 Actions 執行結果"></a>確認 Actions 執行結果</h2><p><img src="/2020/10/24/Hexo%E9%83%A8%E7%BD%B2-GitHub-Actions/pasted-2.png" alt="確認執行結果"></p><p>確認無誤後，以後寫好文章在 Local 端預覽完就可以歡樂的 push 到 Private Repository</p><h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>寫好文章跑一次部署大約花 1 分鐘，GitHub 每個月給 2000 分鐘的免費額度真的佛心</p><h2 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h2><ul><li><a href="https://ithelp.ithome.com.tw/articles/10251504">(27) 試著學 Hexo - 奇淫技巧 - 自動化部屬(GitHub Actions)</a></li><li><a href="https://docs.github.com/en/free-pro-team@latest/github/setting-up-and-managing-billing-and-payments-on-github/about-billing-for-github-actions">About billing for GitHub Actions</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;之前的文章都只儲存在本機，現在想想以前怎麼這麼蠢，藉著這次更新就順便設定 Private Repository 跟 GitHub Workflow 吧&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="http://gundambox.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://gundambox.github.io/tags/Hexo/"/>
    
    <category term="GitHub Actions" scheme="http://gundambox.github.io/tags/GitHub-Actions/"/>
    
  </entry>
  
  <entry>
    <title>Hexo版本升級</title>
    <link href="http://gundambox.github.io/2020/10/24/Hexo%E7%89%88%E6%9C%AC%E5%8D%87%E7%B4%9A/"/>
    <id>http://gundambox.github.io/2020/10/24/Hexo%E7%89%88%E6%9C%AC%E5%8D%87%E7%B4%9A/</id>
    <published>2020-10-24T08:48:00.000Z</published>
    <updated>2020-10-24T08:48:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近發現 Hexo 從當初使用的 3.1 升級到 5.2 了。想到本站很久沒更新了，所以來發個升級的廢文(大誤)</p><a id="more"></a><h2 id="環境設定"><a href="#環境設定" class="headerlink" title="環境設定"></a>環境設定</h2><p>因為電腦經歷重灌，所以等於重新設定環境</p><ol><li><p>將 <code>_post</code> 資料夾的舊文章備份</p><p> 幹大事之前總要先備份</p><p> (其實原本想寫成第 0 步，但是懶得調裝 plugin)</p></li><li><p>安裝 nodejs</p><ul><li><p>Windows</p><p>  到 <a href="https://nodejs.org/en/download/">Download</a> 下載最近的 LTS 版本來安裝</p></li><li><p>Linux</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Using Ubuntu</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -</span><br><span class="line">sudo apt-get install -y nodejs</span><br><span class="line"></span><br><span class="line"><span class="comment"># Using Debian, as root</span></span><br><span class="line">curl -sL https://deb.nodesource.com/setup_lts.x | bash -</span><br><span class="line">apt-get install -y nodejs</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="安裝-hexo"><a href="#安裝-hexo" class="headerlink" title="安裝 hexo"></a>安裝 hexo</h2><ol><li><p>安裝 hexo</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></li><li><p>遷移舊文</p><p> 把之前放在 <code>_post</code> 資料夾的 markdown 檔案搬到新的，收工(誤)</p></li></ol><h2 id="設定-plugin"><a href="#設定-plugin" class="headerlink" title="設定 plugin"></a>設定 plugin</h2><ol><li><p>設定數學插件</p><p> 因為照舊使用 <a href="https://theme-next.js.org/">NexT</a> 主題，所以就直接用底下的 mathjax</p><p> 這邊就直接參考 <a href="https://theme-next.js.org/docs/third-party-services/math-equations.html">官方文件 - Math Equations</a> 將設定調為 <code>true</code></p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Math Formulas Render Support</span></span><br><span class="line"><span class="attr">math:</span></span><br><span class="line">    <span class="comment"># Default (false) will load mathjax / katex script on demand.</span></span><br><span class="line">    <span class="comment"># That is it only render those page which has `mathjax: true` in front-matter.</span></span><br><span class="line">    <span class="comment"># If you set it to true, it will load mathjax / katex srcipt EVERY PAGE.</span></span><br><span class="line">    <span class="attr">every_page:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">mathjax:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    <span class="attr">katex:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="comment"># See: https://github.com/KaTeX/KaTeX/tree/master/contrib/copy-tex</span></span><br><span class="line">    <span class="attr">copy_tex:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>搜尋功能</p><p> 翻文件的時候發現好用，夭壽讚</p><p> 直接參考 <a href="https://theme-next.js.org/docs/third-party-services/search-services.html#Local-Search">官方文件 - Search Services</a> 來設定</p></li><li><p>設定 RSS</p><p> 這邊使用 <a href="https://github.com/hexojs/hexo-generator-feed">hexo-generator-feed</a> Plugin</p><ol><li><p>安裝</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li><p>設定</p> <figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugin:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">hexo-generator-feed</span></span><br><span class="line"><span class="attr">feed:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">atom</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">atom.xml</span></span><br><span class="line">    <span class="attr">limit:</span> <span class="number">20</span></span><br></pre></td></tr></table></figure></li><li><p>發佈</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure></li></ol></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近發現 Hexo 從當初使用的 3.1 升級到 5.2 了。想到本站很久沒更新了，所以來發個升級的廢文(大誤)&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="http://gundambox.github.io/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://gundambox.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>改寫 SignalR 在 Azure Functions 上的 Demo 時遇到的問題</title>
    <link href="http://gundambox.github.io/2020/02/04/%E6%94%B9%E5%AF%AB-SignalR-%E5%9C%A8-Azure-Functions-%E4%B8%8A%E7%9A%84-Demo-%E6%99%82%E9%81%87%E5%88%B0%E7%9A%84%E5%95%8F%E9%A1%8C/"/>
    <id>http://gundambox.github.io/2020/02/04/%E6%94%B9%E5%AF%AB-SignalR-%E5%9C%A8-Azure-Functions-%E4%B8%8A%E7%9A%84-Demo-%E6%99%82%E9%81%87%E5%88%B0%E7%9A%84%E5%95%8F%E9%A1%8C/</id>
    <published>2020-02-04T07:39:59.000Z</published>
    <updated>2020-10-25T07:39:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>在改寫官方的 <a href="https://github.com/Azure-Samples/signalr-service-quickstart-serverless-chat">demo</a> 時，遇到問題</p><a id="more"></a><h2 id="錯誤訊息"><a href="#錯誤訊息" class="headerlink" title="錯誤訊息"></a>錯誤訊息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">Metadata generation failed. Exit code: &#39;-2146232797&#39; Error: &#39;Assert FailureExpression: [Recursive resource lookup bug]Description: Infinite recursion during resource lookup within System.Private.CoreLib.  This may be a bug in System.Private.CoreLib, or potentially in certain extensibility points such as assembly resolve events or CultureInfo names.  Resource name: IO_FileLoadStack Trace:</span><br><span class="line">at System.SR.InternalGetResourceString(String key)</span><br><span class="line">at System.SR.GetResourceString(String resourceKey, String defaultString)</span><br><span class="line">at System.Runtime.Loader.AssemblyLoadContext.ResolveUsingEvent(AssemblyName assemblyName)</span><br><span class="line">at System.Runtime.Loader.AssemblyLoadContext.ResolveUsingResolvingEvent(IntPtr gchManagedAssemblyLoadContext, AssemblyName assemblyName)</span><br><span class="line">at System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks, IntPtr ptrLoadContextBinder)</span><br><span class="line">at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, Evidence assemblySecurity, RuntimeAssembly reqAssembly, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, IntPtr ptrLoadContextBinder)</span><br><span class="line">at System.Reflection.RuntimeAssembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean forIntrospection)</span><br><span class="line">at System.Reflection.RuntimeAssembly.InternalLoad(String assemblyString, Evidence assemblySecurity, StackCrawlMark&amp; stackMark, Boolean forIntrospection)</span><br><span class="line">at System.Reflection.Assembly.Load(String assemblyString)</span><br><span class="line">at ExtensionsMetadataGenerator.Console.Program.AssemblyLoader.&lt;&gt;c__DisplayClass1_0.&lt;Initialize&gt;b__0(Object sender, ResolveEventArgs args) in C:\azure-webjobs-sdk-script\tools\ExtensionsMetadataGenerator\src\ExtensionsMetadataGenerator.Console\Program.cs:line 78</span><br><span class="line">at System.AppDomain.OnAssemblyResolveEvent(RuntimeAssembly assembly, String assemblyFullName)</span><br><span class="line">at System.Reflection.RuntimeAssembly._nLoad(AssemblyName fileName, String codeBase, Evidence assemblySecurity, RuntimeAssembly locationHint, StackCrawlMark&amp; stackMark, IntPtr pPrivHostBinder, Boolean throwOnFileNotFound, Boolean forIntrospection, Boolean suppressSecurityChecks, IntPtr ptrLoadContextBinder)</span><br><span class="line">at System.Reflection.RuntimeAssembly.InternalGetSatelliteAssembly(String name, CultureInfo culture, Version version, Boolean throwOnFileNotFound, StackCrawlMark&amp; stackMark)</span><br><span class="line">at System.Resources.ManifestBasedResourceGroveler.GetSatelliteAssembly(CultureInfo lookForCulture, StackCrawlMark&amp; stackMark)</span><br><span class="line">at System.Resources.ManifestBasedResourceGroveler.GrovelForResourceSet(CultureInfo culture, Dictionary&#96;2 localResourceSets, Boolean tryParents, Boolean createIfNotExists, StackCrawlMark&amp; stackMark)</span><br><span class="line">at System.Resources.ResourceManager.InternalGetResourceSet(CultureInfo requestedCulture, Boolean createIfNotExists, Boolean tryParents, StackCrawlMark&amp; stackMark)</span><br><span class="line">at System.Resources.ResourceManager.InternalGetResourceSet(CultureInfo culture, Boolean createIfNotExists, Boolean tryParents)</span><br><span class="line">at System.Resources.ResourceManager.GetString(String name, CultureInfo culture)</span><br><span class="line">at System.SR.InternalGetResourceString(String key)</span><br><span class="line">at System.SR.GetResourceString(String resourceKey, String defaultString)</span><br><span class="line">at System.Runtime.Loader.AssemblyLoadContext.ResolveUsingEvent(AssemblyName assemblyName)</span><br><span class="line">at System.Runtime.Loader.AssemblyLoadContext.ResolveUsingResolvingEvent(IntPtr gchManagedAssemblyLoadContext, AssemblyName assemblyName)</span><br><span class="line">at System.ModuleHandle.ResolveType(RuntimeModule module, Int32 typeToken, IntPtr* typeInstArgs, Int32 typeInstCount, IntPtr* methodInstArgs, Int32 methodInstCount, ObjectHandleOnStack type)</span><br><span class="line">at System.ModuleHandle.ResolveType(RuntimeModule module, Int32 typeToken, IntPtr* typeInstArgs, Int32 typeInstCount, IntPtr* methodInstArgs, Int32 methodInstCount, ObjectHandleOnStack type)</span><br><span class="line">at System.ModuleHandle.ResolveTypeHandleInternal(RuntimeModule module, Int32 typeToken, RuntimeTypeHandle[] typeInstantiationContext, RuntimeTypeHandle[] methodInstantiationContext)</span><br><span class="line">at System.Reflection.RuntimeModule.ResolveType(Int32 metadataToken, Type[] genericTypeArguments, Type[] genericMethodArguments)</span><br><span class="line">at System.Reflection.CustomAttribute.FilterCustomAttributeRecord(CustomAttributeRecord caRecord, MetadataImport scope, Assembly&amp; lastAptcaOkAssembly, RuntimeModule decoratedModule, MetadataToken decoratedToken, RuntimeType attributeFilterType, Boolean mustBeInheritable, Object[] attributes, IList derivedAttributes, RuntimeType&amp; attributeType, IRuntimeMethodInfo&amp; ctor, Boolean&amp; ctorHasParameters, Boolean&amp; isVarArg)</span><br><span class="line">at System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeModule decoratedModule, Int32 decoratedMetadataToken, Int32 pcaCount, RuntimeType attributeFilterType, Boolean mustBeInheritable, IList derivedAttributes, Boolean isDecoratedTargetSecurityTransparent)</span><br><span class="line">at System.Reflection.CustomAttribute.GetCustomAttributes(RuntimeAssembly assembly, RuntimeType caType)</span><br><span class="line">at System.Attribute.GetCustomAttributes(Assembly element, Boolean inherit)</span><br><span class="line">at ExtensionsMetadataGenerator.ExtensionsMetadataGenerator.GenerateExtensionReferences(Assembly assembly) in C:\azure-webjobs-sdk-script\tools\ExtensionsMetadataGenerator\src\ExtensionsMetadataGenerator.Console\ExtensionsMetadataGenerator.cs:line 103</span><br><span class="line">at ExtensionsMetadataGenerator.ExtensionsMetadataGenerator.Generate(String sourcePath, String outputPath, ConsoleLogger logger) in C:\azure-webjobs-sdk-script\tools\ExtensionsMetadataGenerator\src\ExtensionsMetadataGenerator.Console\ExtensionsMetadataGenerator.cs:line 46</span><br><span class="line">at ExtensionsMetadataGenerator.Console.Program.Main(String[] args) in C:\azure-webjobs-sdk-script\tools\ExtensionsMetadataGenerator\src\ExtensionsMetadataGenerator.Console\Program.cs:line 32&#39;</span><br></pre></td></tr></table></figure><h2 id="排除過程"><a href="#排除過程" class="headerlink" title="排除過程"></a>排除過程</h2><ol><li><p>剛開始以為是 Nuget 套件版本太舊</p><ul><li>結果無效</li></ul></li><li><p>更新了以下開發環境都無效</p><ul><li><p>Visual Studio 2019</p></li><li><p>ASP.NET Core 3.1</p></li><li><p>結果無效</p></li></ul></li><li><p>後來覺得是開發工具有 Bug 但官方還沒修</p><ul><li><p>嘗試用 Visual Studio Code 的 <a href="https://marketplace.visualstudio.com/items?itemName=ms-azuretools.vscode-azurefunctions">Azure Functions Extension</a></p></li><li><p>結果無效</p></li></ul></li><li><p>推測是某個套件版本不對，但目前找不到哪裡出問題</p><ol><li><p>從其他 issue 回報推測，這應該是 dot net core 已知的 bug，而且應該早修掉了，但還是遇到了</p></li><li><p>其他人回報的應急方法都沒用，只能自己通靈</p></li><li><p>目前自己測出來的應急方法是：</p><ul><li><p>清掉 nuget 快取</p></li><li><p>遇到建置失敗就清</p></li><li><p>Visual Studio 重開就需要再清一次</p><p><img src="/2020/02/04/%E6%94%B9%E5%AF%AB-SignalR-%E5%9C%A8-Azure-Functions-%E4%B8%8A%E7%9A%84-Demo-%E6%99%82%E9%81%87%E5%88%B0%E7%9A%84%E5%95%8F%E9%A1%8C/01.png" alt="清掉 nuget 快取"></p></li></ul></li></ol></li></ol><h2 id="2020-02-21更新"><a href="#2020-02-21更新" class="headerlink" title="2020/02/21更新"></a>2020/02/21更新</h2><p>後來找到這個 issue</p><p><a href="https://github.com/aspnet/Announcements/issues/401">Known issue in 3.0.2 and 3.1.1 for ASP.NET Core · Issue #401 · aspnet/Announcements</a></p><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><p><a href="https://github.com/Azure-Samples/signalr-service-quickstart-serverless-chat">Azure-Samples/signalr-service-quickstart-serverless-chat</a></p></li><li><p><a href="https://github.com/NLog/NLog.Web/issues/210">Recursive resource lookup bug - Infinite recursion during resource lookup within System.Private.CoreLib. · Issue #210 · NLog/NLog.Web</a></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;在改寫官方的 &lt;a href=&quot;https://github.com/Azure-Samples/signalr-service-quickstart-serverless-chat&quot;&gt;demo&lt;/a&gt; 時，遇到問題&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>AR.js + QRCode 是否搞錯了什麼</title>
    <link href="http://gundambox.github.io/2019/11/01/AR-js-QRCode-%E6%98%AF%E5%90%A6%E6%90%9E%E9%8C%AF%E4%BA%86%E4%BB%80%E9%BA%BC/"/>
    <id>http://gundambox.github.io/2019/11/01/AR-js-QRCode-%E6%98%AF%E5%90%A6%E6%90%9E%E9%8C%AF%E4%BA%86%E4%BB%80%E9%BA%BC/</id>
    <published>2019-11-01T07:27:11.000Z</published>
    <updated>2020-10-25T07:27:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>想要在 QRCode 中間的圖案加上 AR.js 的 Marker，然後實驗後被光速打臉</p><a id="more"></a><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><ol><li>先到 <a href="https://jeromeetienne.github.io/AR.js/three.js/examples/marker-training/examples/generator.html">AR.js Marker Training</a> 網站做好 marker</li><li>製作 QRCode，並將中間的 Logo 設為 marker</li><li>然後被光速打臉</li></ol><h2 id="打臉原因"><a href="#打臉原因" class="headerlink" title="打臉原因"></a>打臉原因</h2><ol><li>marker 占用的是 QRCode 的容錯空間，想讓 AR.js 好辨識就要犧牲 QRCode 的容錯</li><li>想要讓 QRCode 可以掃到就需要容錯，就要縮小 marker</li></ol><h2 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h2><p>皮諾可，這個需求直接電死</p><p><img src="/2019/11/01/AR-js-QRCode-%E6%98%AF%E5%90%A6%E6%90%9E%E9%8C%AF%E4%BA%86%E4%BB%80%E9%BA%BC/%E7%9A%AE%E8%AB%BE%E5%8F%AF%E9%80%99%E5%80%8B%E7%9B%B4%E6%8E%A5%E9%9B%BB%E6%AD%BB.jpg" alt="皮諾可，這個需求直接電死"></p><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><p><a href="https://jeromeetienne.github.io/AR.js/three.js/examples/marker-training/examples/generator.html">AR.js Marker Training</a></p></li><li><p><a href="https://medium.com/chialab-open-source/how-to-deliver-ar-on-the-web-only-with-a-qr-code-e24b7b61f8cb">How to deliver AR on the web only with a QR Code</a></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;想要在 QRCode 中間的圖案加上 AR.js 的 Marker，然後實驗後被光速打臉&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>AR.js 自訂 marker 注意事項</title>
    <link href="http://gundambox.github.io/2019/10/30/AR-js-%E8%87%AA%E8%A8%82-marker-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85/"/>
    <id>http://gundambox.github.io/2019/10/30/AR-js-%E8%87%AA%E8%A8%82-marker-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A0%85/</id>
    <published>2019-10-30T07:24:14.000Z</published>
    <updated>2020-10-25T07:24:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>AR.js 使用自訂 marker 卻一直抓不到，開 debug 模式也發現 ArToolkitContext 根本抓不到 pattern</p><a id="more"></a><p>Marker 中間的圖片，周邊最好填滿 RGB(240, 240, 240) 的顏色，不然 Detector 會抓不到 pattern</p><p>簡單的說，你眼中的白不是白(幹)</p><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><p><a href="https://jeromeetienne.github.io/AR.js/three.js/examples/marker-training/examples/generator.html">AR.js Marker Training</a></p></li><li><p><a href="https://github.com/jeromeetienne/AR.js/issues/437">Unable to create marker for custom marker using AR.js Marker Traning · Issue #437 · jeromeetienne/AR.js</a></p></li><li><p><a href="https://medium.com/chialab-open-source/ar-js-the-simpliest-way-to-get-cross-browser-ar-on-the-web-8f670dd45462">AR.js - The Simplest Way to get Cross-Browser Augmented Reality on the Web</a></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;AR.js 使用自訂 marker 卻一直抓不到，開 debug 模式也發現 ArToolkitContext 根本抓不到 pattern&lt;/p&gt;</summary>
    
    
    
    
    <category term="AR.js" scheme="http://gundambox.github.io/tags/AR-js/"/>
    
  </entry>
  
  <entry>
    <title>Azure Devops REST Api</title>
    <link href="http://gundambox.github.io/2019/10/15/Azure-Devops-REST-Api/"/>
    <id>http://gundambox.github.io/2019/10/15/Azure-Devops-REST-Api/</id>
    <published>2019-10-15T07:03:40.000Z</published>
    <updated>2020-10-25T07:03:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>呼叫 Azure Devops REST Api 過程中遇到的問題</p><a id="more"></a><h2 id="問題描述"><a href="#問題描述" class="headerlink" title="問題描述"></a>問題描述</h2><p>呼叫 5.1 版的 Azure Devops REST Api 會一直跳 <code>400 Bad Request</code></p><h2 id="解決方法"><a href="#解決方法" class="headerlink" title="解決方法"></a>解決方法</h2><p>Http Request 的 header.Accept 要加上 api version</p><p>例如: <code>$header.Accept = &quot;application/json;api-version=5.1&quot;</code></p><h2 id="後記"><a href="#後記" class="headerlink" title="後記"></a>後記</h2><p>官方文件研究很久都找不到問題，最後突然靈光一閃想到該不會某個欄位要傳版本但是文件沒寫吧。然後問題就莫名解決了WTF???</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;呼叫 Azure Devops REST Api 過程中遇到的問題&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>從 Azure DevOps 推送 source code 到 Gitlab Ci</title>
    <link href="http://gundambox.github.io/2019/10/09/%E5%BE%9E-Azure-DevOps-%E6%8E%A8%E9%80%81-source-code-%E5%88%B0-Gitlab-Ci/"/>
    <id>http://gundambox.github.io/2019/10/09/%E5%BE%9E-Azure-DevOps-%E6%8E%A8%E9%80%81-source-code-%E5%88%B0-Gitlab-Ci/</id>
    <published>2019-10-09T06:56:56.000Z</published>
    <updated>2020-10-25T06:56:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 GitLab CI 上弄 ASP.NET Core 真的會搞到自己，來試試看 GitLab 能不能把 source code 推送到 Azure DevPps 上後再做 Build 跟 Test</p><a id="more"></a><h2 id="目標"><a href="#目標" class="headerlink" title="目標"></a>目標</h2><ol><li>透過 merge request events觸發 gitlab ci</li><li>讓事先寫好的 script 執行</li><li>將程式碼 push 到 Azure DevOps Repo 上</li></ol><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><h3 id="產生-ssh-key"><a href="#產生-ssh-key" class="headerlink" title="產生 ssh key"></a>產生 ssh key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -C <span class="string">&quot;user@example.com&quot;</span></span><br><span class="line">Generating public/private rsa key pair.</span><br><span class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/c/Users/user/.ssh/id_rsa):</span><br><span class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase):</span><br><span class="line">Enter same passphrase again:</span><br><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/user/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/user/.ssh/id_rsa.pub.</span><br><span class="line">The key fingerprint is:</span><br><span class="line">SHA256:******************************************* user@example.com</span><br><span class="line">The key<span class="string">&#x27;s randomart image is:</span></span><br><span class="line"><span class="string">+---[RSA 2048]----+</span></span><br><span class="line"><span class="string">|+.   +yX*o .     |</span></span><br><span class="line"><span class="string">|... ..E+*=o      |</span></span><br><span class="line"><span class="string">|  ..o.=E=.o      |</span></span><br><span class="line"><span class="string">|   . * =.o .     |</span></span><br><span class="line"><span class="string">|    . S o o..    |</span></span><br><span class="line"><span class="string">|       + .oo     |</span></span><br><span class="line"><span class="string">|        S+.  .   |</span></span><br><span class="line"><span class="string">|        ..+.+    |</span></span><br><span class="line"><span class="string">|          o*..   |</span></span><br><span class="line"><span class="string">+----[SHA256]-----+</span></span><br></pre></td></tr></table></figure><h3 id="在-Azure-DevOps-Services-加入-public-key"><a href="#在-Azure-DevOps-Services-加入-public-key" class="headerlink" title="在 Azure DevOps Services 加入 public key"></a>在 Azure DevOps Services 加入 public key</h3><p><a href="https://docs.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops#step-2--add-the-public-key-to-azure-devops-servicestfs">Connect to your Git repos with SSH - Azure Repos</a></p><h3 id="Create-gitlab-ci-yml"><a href="#Create-gitlab-ci-yml" class="headerlink" title="Create .gitlab-ci.yml"></a>Create <code>.gitlab-ci.yml</code></h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">image:</span> <span class="string">microsoft/dotnet:latest</span></span><br><span class="line"></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">build</span></span><br><span class="line"></span><br><span class="line"><span class="attr">variables:</span></span><br><span class="line">    <span class="attr">AZURE_URL:</span> <span class="string">git@ssh.dev.azure.com:v3/Oragnization/Project/gitlab-ci-test</span></span><br><span class="line">    </span><br><span class="line"><span class="attr">build:</span></span><br><span class="line">    <span class="attr">stage:</span> <span class="string">build</span></span><br><span class="line">    <span class="attr">script:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">chmod</span> <span class="string">+x</span> <span class="string">Script/*</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">./Script/git-push</span> <span class="string">$AZURE_URL</span> <span class="string">$CI_COMMIT_REF_NAME</span></span><br><span class="line">    <span class="attr">only:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">merge_requests</span></span><br></pre></td></tr></table></figure><h3 id="GitLab-gt-Project-gt-Settings-gt-CI-CD-gt-Variables，加入變數-SSH-PRIVATE-KEY"><a href="#GitLab-gt-Project-gt-Settings-gt-CI-CD-gt-Variables，加入變數-SSH-PRIVATE-KEY" class="headerlink" title="GitLab &gt; Project &gt; Settings &gt; CI/CD &gt; Variables，加入變數 SSH_PRIVATE_KEY"></a>GitLab &gt; Project &gt; Settings &gt; CI/CD &gt; Variables，加入變數 <code>SSH_PRIVATE_KEY</code></h3><h2 id="參考連結"><a href="#參考連結" class="headerlink" title="參考連結"></a>參考連結</h2><ol><li><p><a href="https://github.com/IlyaSemenov/gitlab-ci-git-push">IlyaSemenov/gitlab-ci-git-push</a></p></li><li><p><a href="https://docs.microsoft.com/en-us/azure/devops/repos/git/use-ssh-keys-to-authenticate?view=azure-devops">Connect to your Git repos with SSH - Azure Repos</a></p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;在 GitLab CI 上弄 ASP.NET Core 真的會搞到自己，來試試看 GitLab 能不能把 source code 推送到 Azure DevPps 上後再做 Build 跟 Test&lt;/p&gt;</summary>
    
    
    
    <category term="DevOps" scheme="http://gundambox.github.io/categories/DevOps/"/>
    
    
    <category term="GitLab CI" scheme="http://gundambox.github.io/tags/GitLab-CI/"/>
    
    <category term="Azure DevOps" scheme="http://gundambox.github.io/tags/Azure-DevOps/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB 服務啟動失敗</title>
    <link href="http://gundambox.github.io/2019/10/01/MongoDB-%E6%9C%8D%E5%8B%99%E5%95%9F%E5%8B%95%E5%A4%B1%E6%95%97/"/>
    <id>http://gundambox.github.io/2019/10/01/MongoDB-%E6%9C%8D%E5%8B%99%E5%95%9F%E5%8B%95%E5%A4%B1%E6%95%97/</id>
    <published>2019-10-01T03:20:33.000Z</published>
    <updated>2020-10-25T06:48:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>MongoDB 安裝過程中，將 <code>data/log</code> 資料夾設定在預設值以外的地方，導致安裝完成後服務啟動失敗</p><a id="more"></a><h2 id="問題描述"><a href="#問題描述" class="headerlink" title="問題描述"></a>問題描述</h2><p>MongoDB Server 4.2 Community 安裝過程中，如果要把 <code>data/log</code> 資料夾設定在預設值以外的地方，安裝程式不會主動新增 <code>log</code> 檔案跟建立資料夾，導致服務啟動失敗。</p><h2 id="環境"><a href="#環境" class="headerlink" title="環境"></a>環境</h2><p>OS: Windows10</p><h2 id="排除過程"><a href="#排除過程" class="headerlink" title="排除過程"></a>排除過程</h2><ol><li><p>安裝畫面中 <code>Ignore</code> 錯誤後完成安裝程序</p></li><li><p>到安裝路徑下找到 <code>mongod.cfg</code> 檔案</p></li><li><p>建立路徑</p><p> 例如：</p> <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">systemLog:</span></span><br><span class="line">    <span class="attr">destination:</span> <span class="string">file</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">D:\MongoDB\log\mongod.log</span></span><br><span class="line"><span class="attr">storage:</span></span><br><span class="line">    <span class="attr">dbPath:</span> <span class="string">D:\MongoDB\data</span></span><br></pre></td></tr></table></figure><ol><li>建立 <code>D:\MongoDB\log\mongod.log</code> 檔案</li><li>建立 <code>D:\MongoDB\data</code> 資料夾</li></ol></li><li><p>重新啟動 MongoDB 服務</p></li><li><p>Done</p></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;MongoDB 安裝過程中，將 &lt;code&gt;data/log&lt;/code&gt; 資料夾設定在預設值以外的地方，導致安裝完成後服務啟動失敗&lt;/p&gt;</summary>
    
    
    
    <category term="MongoDB" scheme="http://gundambox.github.io/categories/MongoDB/"/>
    
    
    <category term="MongoDB" scheme="http://gundambox.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>第一次用 C++ 寫 DLL 就上手</title>
    <link href="http://gundambox.github.io/2015/12/01/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8-C-%E5%AF%AB-DLL-%E5%B0%B1%E4%B8%8A%E6%89%8B/"/>
    <id>http://gundambox.github.io/2015/12/01/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8-C-%E5%AF%AB-DLL-%E5%B0%B1%E4%B8%8A%E6%89%8B/</id>
    <published>2015-12-01T12:25:00.000Z</published>
    <updated>2024-03-28T00:43:41.572Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DLL-簡介"><a href="#DLL-簡介" class="headerlink" title="DLL 簡介"></a>DLL 簡介</h1><p>動態連結函式庫（英語：Dynamic-link library，縮寫為DLL）是微軟公司在微軟視窗作業系統中實作共享函式庫概念的一種實作方式。這些函式庫函式的副檔名是.DLL、.OCX（包含ActiveX控制的函式庫）或者.DRV（舊式的系統驅動程式)。</p><p>所謂動態連結，就是把一些經常會共用的程式碼（靜態連結的OBJ程式庫）製作成DLL檔，當執行檔呼叫到DLL檔內的函式時，Windows作業系統才會把DLL檔載入記憶體內，DLL檔本身的結構就是可執行檔，當程式需求函式才進行連結。透過動態連結方式，記憶體浪費的情形將可大幅降低。靜態連結函式庫則是直接連結到執行檔。</p><p>DLL的文件格式與視窗EXE文件一樣——也就是說，等同於32位元視窗的可移植執行文件（PE）和16位元視窗的New Executable（NE）。作為EXE格式，DLL可以包括原始碼、資料和資源的多種組合。</p><p>在更廣泛的意義上說，任何同樣文件格式的電腦檔案都可以稱作資源DLL。這樣的DLL的例子有副檔名為ICL的圖示函式庫、副檔名為FON和FOT的字型文件。</p><h1 id="DLL-的撰寫"><a href="#DLL-的撰寫" class="headerlink" title="DLL 的撰寫"></a>DLL 的撰寫</h1><p>本文件是用 Visual Studio 2012 來做 DLL 開發示範</p><p>首先開新專案 TestDLL2012</p><p><img src="/2015/12/01/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8-C-%E5%AF%AB-DLL-%E5%B0%B1%E4%B8%8A%E6%89%8B/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8C++%E5%AF%ABDLL%E5%B0%B1%E4%B8%8A%E6%89%8B-1.png" alt="開新專案1"></p><p><img src="/2015/12/01/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8-C-%E5%AF%AB-DLL-%E5%B0%B1%E4%B8%8A%E6%89%8B/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8C++%E5%AF%ABDLL%E5%B0%B1%E4%B8%8A%E6%89%8B-2.png" alt="開新專案2"></p><p>選擇應用程式類型 DLL</p><p><img src="/2015/12/01/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8-C-%E5%AF%AB-DLL-%E5%B0%B1%E4%B8%8A%E6%89%8B/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8C++%E5%AF%ABDLL%E5%B0%B1%E4%B8%8A%E6%89%8B-3.png" alt="選擇DLL"></p><p>然後 Visual Studio 會產生 TestDLL2012.h 跟 TestDLL2012.cpp</p><p>TestDLL2012.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 下列 ifdef 區塊是建立巨集以協助從 DLL 匯出的標準方式。</span></span><br><span class="line"><span class="comment">// 這個 DLL 中的所有檔案都是使用命令列中所定義 TESTDLL2012_EXPORTS 符號編譯的。</span></span><br><span class="line"><span class="comment">// 在命令列定義的符號。任何專案都不應定義這個符號</span></span><br><span class="line"><span class="comment">// 這樣一來，原始程式檔中包含這檔案的任何其他專案</span></span><br><span class="line"><span class="comment">// 會將 TESTDLL2012_API 函式視為從 DLL 匯入的，而這個 DLL 則會將這些符號視為</span></span><br><span class="line"><span class="comment">// 匯出的。</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> TESTDLL2012_EXPORTS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TESTDLL2012_API __declspec(dllexport)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TESTDLL2012_API __declspec(dllimport)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 這個類別是從 TestDLL2012.dll 匯出的</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TESTDLL2012_API</span> <span class="title">CTestDLL2012</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    CTestDLL2012(<span class="keyword">void</span>);</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 在此加入您的方法。</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> TESTDLL2012_API <span class="keyword">int</span> nTestDLL2012;</span><br><span class="line"></span><br><span class="line"><span class="function">TESTDLL2012_API <span class="keyword">int</span> <span class="title">fnTestDLL2012</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br></pre></td></tr></table></figure><p>TestDLL2012.cpp</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// TestDLL2012.cpp : 定義 DLL 應用程式的匯出函式。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdafx.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;TestDLL2012.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 這是匯出變數的範例</span></span><br><span class="line">TESTDLL2012_API <span class="keyword">int</span> nTestDLL2012=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 這是匯出函式的範例。</span></span><br><span class="line"><span class="function">TESTDLL2012_API <span class="keyword">int</span> <span class="title">fnTestDLL2012</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">42</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 這是已匯出的類別建構函式。</span></span><br><span class="line"><span class="comment">// 請參閱 TestDLL2012.h 中的類別定義</span></span><br><span class="line">CTestDLL2012::CTestDLL2012()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下來就按照 Visual Studio 的範例來寫函式吧~</p><p>首先在標頭檔加入 </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">TESTDLL2012_API <span class="keyword">int</span> __stdcall <span class="title">fnTestDll</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br></pre></td></tr></table></figure><p>然後在實作檔加入</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">TESTDLL2012_API <span class="keyword">int</span> __stdcall <span class="title">add</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>為什麼加入 __stdcall 可以參考<a href="http://lionrex.pixnet.net/blog/post/63853531-%5Bc%2B%2B%5D-__stdcall-,__cdecl">這篇</a></p><p>之後加入 .def 檔案</p><p><img src="/2015/12/01/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8-C-%E5%AF%AB-DLL-%E5%B0%B1%E4%B8%8A%E6%89%8B/%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%94%A8C++%E5%AF%ABDLL%E5%B0%B1%E4%B8%8A%E6%89%8B-4.png" alt="加入.def檔案"></p><p>在裡面加入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">LIBRARY&quot;TestDLL2012&quot;</span><br><span class="line"></span><br><span class="line">EXPORTS </span><br><span class="line">add @1</span><br></pre></td></tr></table></figure><p>之後在專案-&gt;屬性-&gt;連結器-&gt;輸入-&gt;模型定義檔</p><p>輸入 TestDLL2012.def </p><p>建置專案就行了</p><h1 id="VB-Net呼叫DLL"><a href="#VB-Net呼叫DLL" class="headerlink" title="VB.Net呼叫DLL"></a>VB.Net呼叫DLL</h1><p>將建置好的 .dll 檔跟複製到預設執行檔底下的資料夾</p><p>然後宣告 DLL 函式</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Public</span> <span class="keyword">Declare</span> <span class="keyword">Auto</span> <span class="keyword">Function</span> add <span class="keyword">Lib</span> <span class="string">&quot;TestDLL2012.dll&quot;</span> (<span class="keyword">ByVal</span> a <span class="keyword">As</span> <span class="built_in">Integer</span>, <span class="keyword">ByVal</span> b <span class="keyword">As</span> <span class="built_in">Integer</span>) <span class="keyword">As</span> <span class="built_in">Integer</span></span><br></pre></td></tr></table></figure><p>就可以在VB裡面呼叫這個函式囉&gt;.^</p><h1 id="C-呼叫DLL"><a href="#C-呼叫DLL" class="headerlink" title="C++呼叫DLL"></a>C++呼叫DLL</h1><p>將建置好的 .dll 檔跟 .lib 複製到跟 main.cpp 底下的資料夾</p><p>在 main.cpp 加入</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;TestDLL2012.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">3</span>, b = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> c = add(a,b);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;a + b = &quot;</span>&lt;&lt;c&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然後到專案-&gt;屬性-&gt;連結器-&gt;輸入-&gt;其他相依性</p><p>加入 TestDLL2012.lib</p><p>建置之後就可以執行了</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><ol><li><a href="https://zh.wikipedia.org/wiki/%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5%E5%BA%93">動態連結函式庫</a></li></ol>]]></content>
    
    
    <summary type="html">本篇在講撰寫 DLL 的過程</summary>
    
    
    
    <category term="C++" scheme="http://gundambox.github.io/categories/C/"/>
    
    
    <category term="C++" scheme="http://gundambox.github.io/tags/C/"/>
    
    <category term="DLL" scheme="http://gundambox.github.io/tags/DLL/"/>
    
  </entry>
  
</feed>
